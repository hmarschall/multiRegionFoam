#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

usage() {
        echo ""
        echo "Usage:"
        echo "($0 [-p or --partitioned | -m or --monolithic] [-S or --serial | -P or --parallel]"
        echo ""
        exit 0
}

# $@ is all command line parameters passed to the script.
# -o is for short options like -v
# -l is for long options with double dash like --version
# the comma separates different long options
# -a is for long options with single dash like -version
options=$(getopt -l "help,partitioned,monolithic:,serial,parallel" -o "hpm:SP" -a -- "$@")

# set --:
# If no arguments follow this option, then the positional parameters are unset.
# Otherwise, the positional parameters are set to the arguments, even if some
# of them begin with a ‘-’.
eval set -- "$options"

no_args=1

while true
do
    case $1 in

        -h|--help)
            usage
            exit 0
            ;;

        -p|--partitioned)
            no_args=0

            cp -r 0/fluid/orig/partitioned/. 0/fluid/.
            cp -r 0/solid/orig/partitioned/. 0/solid/.

            runApplication -l log.blockMesh.fluid blockMesh -region fluid
            runApplication -l log.blockMesh.solid blockMesh -region solid

            runApplication -l log.makeFaMesh.fluid makeFaMesh -region fluid

            ./makeLinks fluid
            ;;

        -m|--monolithic)
            no_args=0

            echo "monolithic coupling for fsi cases currently not supported"
            shift
            break
            ;;

        -S|--serial)
            no_args=0
            runApplication multiRegionFoam 2>/dev/null &
            ;;

        -P|--parallel)
            no_args=0
            runApplication -l log.decomposePar.fluid decomposePar -region fluid
            runApplication -l log.decomposePar.solid decomposePar -region solid

            mpirun -np 4 multiRegionFoam -noFunctionObjects -parallel 2>&1 > log.multiRegionFoam &
            ;;

        --)
            shift
            break;;

    esac
    shift
done

if [ "$no_args" -eq 1 ]; then
    >&2 echo "No arguments provided"
    usage
    exit 1
fi
