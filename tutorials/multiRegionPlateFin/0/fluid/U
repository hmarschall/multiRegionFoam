/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0/fluid";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [ 0 1 -1 0 0 0 0 ];

internalField   uniform (0.5 0 0);

boundaryField
{
    Wall
    {
        type            noSlip;
    }
    Symmetry
    {
        type            symmetry;
    }
//
    In
    {
        type            fixedValue;
        value           $internalField;
    }
//
/*
    In
{
    type            codedFixedValue;
    value           uniform (0 0 0);
    name            name_of_BC;

    codeOptions
    #{
    -I$(LIB_SRC)/finiteVolume/lnInclude \
    -I$(LIB_SRC)/meshTools/lnInclude
    #};

    codeInclude
    #{
    #include "fvCFD.H"
    #include <cmath>
    #include <iostream>
    #};
    
    code
    #{
    const fvPatch& boundaryPatch = patch(); 
    const vectorField& Cf = boundaryPatch.Cf(); 
    vectorField& field = *this;
    scalar U_0 = 20; 
    scalar b = 1.905e-03, p = 1.054e-03, l = 2.833e-03, d = 0.1016e-03;
        forAll(Cf, faceI)
     {
      field[faceI] = vector(U_0*(1-(pow(Cf[faceI].z()-(b+d)/2,2))/(0.25*(b-d)*(b-d))),0,0);
     }
    #};
     }
*/
    Out
    {
        type            zeroGradient;
    }
    fluid_to_solid
    {
        type            noSlip;
    }
}


// ************************************************************************* //
