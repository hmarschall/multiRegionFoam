/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     chtMultiRegionFoam;

startFrom       startTime;

startTime       0.0;

stopAt          endTime;

endTime         .0005;

deltaT          .000001;

writeControl    adjustableRunTime;
 
writeInterval   .000005;

purgeWrite      0;

writeFormat     binary;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable on;

adjustTimeStep  off;

InfoSwitches
{
     allowSystemOperations 1;
}

functions
{
/*
forces

{
type forces;

libs ("libforces.so");

patches ( Symmetry );

region  fluid ;

rhoName rho;

pName p;

UName U;

CofR (0 0 0);

rhoInf 1000;

name forces;

uitype forces;

writeControl timeStep;

writeInterval 1;

format ascii;
}
*/


heatTransferCoeff
    {
        type            heatTransferCoeff;
        libs            (fieldFunctionObjects);
        field           T;
        patches         (Symmetry);
        htcModel        fixedReferenceTemperature;
        writeControl    outputTime;
        writeInterval   1;
        TRef            273;

    enabled         true;
    log             true;
        region          fluid;
    }

/*
//    #includeFunc residuals(region = fluid, p_rgh, U, h)
//    #includeFunc residuals(region = solid, h)

heatTransferCoeff1
{
    // Mandatory entries (unmodifiable)
    type            heatTransferCoeff;
    libs            (fieldFunctionObjects);
    field           T;
    patches         (Symmetry);
    htcModel        fixedReferenceTemperature;
    UInf            (20 0 0);
    Cp              CpInf;
    CpInf           1000;
    rho             rhoInf;
    rhoInf          1.2;

    // Optional (inherited) entries

    result          <fieldResult>;
    region          region0;
    enabled         true;
    log             true;
    timeStart       0;
    timeEnd         1000;
    executeControl  timeStep;
    executeInterval 1;
    writeControl    timeStep;
    writeInterval   1;
zzzzzzzzzzzzzzzzzzzzzzz
{
    htc
    {
        type            heatTransferCoeff;
        libs            (fieldFunctionObjects);
        field           T;
        writeControl    outputTime;
        writeInterval   1;
        htcModel        fixedReferenceTemperature;
        patches         (ceiling);
        TRef            373;
    }
}

zzzzzzzzzzzzzzzzzzzzzzzzz
}
*/
}


// ************************************************************************* //
