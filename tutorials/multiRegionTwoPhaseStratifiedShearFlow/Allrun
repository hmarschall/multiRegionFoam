#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

usage() { 
        echo ""
        echo "Usage:" 
        echo "($0 [-p or --partitioned | -m or --monolithic] [-S or --serial | -P or --parallel]"
        echo ""
        exit 0
}

# $@ is all command line parameters passed to the script.
# -o is for short options like -v
# -l is for long options with double dash like --version
# the comma separates different long options
# -a is for long options with single dash like -version
options=$(getopt -l "help,partitioned,monolithic:,serial,parallel" -o "hpm:SP" -a -- "$@")

# set --:
# If no arguments follow this option, then the positional parameters are unset. 
# Otherwise, the positional parameters are set to the arguments, even if some 
# of them begin with a ‘-’.
eval set -- "$options"

while true
do
    case $1 in

        -h|--help) 
            usage
            exit 0
            ;;

        -p|--partitioned)
            cp 0/fluidA/orig/partitioned/U 0/fluidA/.
            cp 0/fluidB/orig/partitioned/U 0/fluidB/.

            cp 0/fluidA/orig/partitioned/p 0/fluidA/.
            cp 0/fluidB/orig/partitioned/p 0/fluidB/.

            cp constant/fluidA/polyMesh/blockMeshDictPartitioned constant/fluidA/polyMesh/blockMeshDict 2>/dev/null
            cp constant/fluidB/polyMesh/blockMeshDictPartitioned constant/fluidB/polyMesh/blockMeshDict 2>/dev/null

            runApplication -l log.blockMesh.fluidB blockMesh -region fluidB 2>/dev/null
            runApplication blockMesh -region fluidA 2>/dev/null

            runApplication -l log.setSet.fluidB setSet -region fluidB -batch faces.setSet 2>/dev/null
            runApplication setSet -region fluidA -batch faces.setSet 2>/dev/null

            runApplication makeFaMesh -region fluidA 2>/dev/null 
            runApplication -l log.makeFaMesh.fluidB makeFaMesh -region fluidB 2>/dev/null

            ./makeLinks fluidA
            ;;

        -m|--monolithic)
            cp 0/fluidA/orig/monolithic/T 0/fluidA/.
            cp 0/fluidA/orig/monolithic/alpha 0/fluidA/.
            cp 0/fluidB/orig/monolithic/T 0/fluidB/.
            cp 0/fluidB/orig/monolithic/alpha 0/fluidB/.

            cp constant/fluidA/polyMesh/blockMeshDictMonolithic constant/fluidA/polyMesh/blockMeshDict 2>/dev/null
            cp constant/fluidB/polyMesh/blockMeshDictMonolithic constant/fluidB/polyMesh/blockMeshDict 2>/dev/null

            runApplication -l log.blockMesh.fluidB blockMesh -region fluidB 2>/dev/null
            runApplication -l log.setSet.fluidB setSet -region fluidB -batch fluidB.setSet 2>/dev/null
            runApplication -l log.setsToZones.fluidB setsToZones -region fluidB -noFlipMap 2>/dev/null

            runApplication blockMesh -region fluidA 2>/dev/null
            runApplication setSet -region fluidA -batch fluidA.setSet 2>/dev/null
            runApplication setsToZones -region fluidA -noFlipMap 2>/dev/null

            ./makeLinks fluidA
            ;;

        -S|--serial)
            runApplication multiRegionFoam 2>/dev/null
            ;;

        -P|--parallel)
            runApplication decomposePar -region fluidA
            runApplication -l log.decomposePar.fluidB decomposePar -region fluidB

            mpirun -np 2 multiRegionFoam -noFunctionObjects -parallel 2>&1 > log.multiRegionFoam            
            ;;

        --)
            shift
            break;;

    esac
    shift
done
