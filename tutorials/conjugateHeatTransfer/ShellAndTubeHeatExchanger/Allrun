#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

usage() {
        echo ""
        echo "Usage:"
        echo "($0 [-p or --partitioned | -m or --monolithic] [-S or --serial | -P or --parallel]"
        echo ""
        exit 0
}

# $@ is all command line parameters passed to the script.
# -o is for short options like -v
# -l is for long options with double dash like --version
# the comma separates different long options
# -a is for long options with single dash like -version
options=$(getopt -l "help,partitioned,monolithic:,serial,parallel" -o "hpm:SP" -a -- "$@")

# set --:
# If no arguments follow this option, then the positional parameters are unset.
# Otherwise, the positional parameters are set to the arguments, even if some
# of them begin with a ‘-’.
eval set -- "$options"

no_args=1

while true
do
    case $1 in

        -h|--help)
            usage
            exit 0
            ;;

        -p|--partitioned)
            no_args=0

            cp 0/inner/orig/partitioned/T 0/inner/.
            cp 0/outer/orig/partitioned/T 0/outer/.
	        cp 0/solid/orig/partitioned/T 0/solid/.

            cp constant/regionInterfacePropertiesPartitioned constant/regionInterfaceProperties

            cp -r ./baseMeshes/partitioned/constant/inner/polyMesh/ ./constant/inner
            cp -r ./baseMeshes/partitioned/constant/outer/polyMesh/ ./constant/outer
            cp -r ./baseMeshes/partitioned/constant/solid/polyMesh/ ./constant/solid

            cp -r ./baseMeshes/partitioned/constant/inner/faMesh/ ./constant/inner
            cp -r ./baseMeshes/partitioned/constant/outer/faMesh/ ./constant/outer

            runApplication -l log.makeFaMesh.inner makeFaMesh -region inner 2>/dev/null
            runApplication -l log.makeFaMesh.outer makeFaMesh -region outer 2>/dev/null

            ;;

        -m|--monolithic)
            no_args=0

            cp 0/inner/orig/monolithic/T 0/inner/.
            cp 0/inner/orig/monolithic/k 0/inner/.
            cp 0/outer/orig/monolithic/T 0/outer/.
            cp 0/outer/orig/monolithic/k 0/outer/.
            cp 0/solid/orig/monolithic/T 0/solid/.
            cp 0/solid/orig/monolithic/k 0/solid/.

            cp constant/regionInterfacePropertiesMonolithic constant/regionInterfaceProperties

            cp -r ./baseMeshes/monolithic/constant/inner/polyMesh/ ./constant/inner
            cp -r ./baseMeshes/monolithic/constant/inner/faMesh/ ./constant/inner
            cp -r ./baseMeshes/monolithic/constant/outer/polyMesh/ ./constant/outer
            cp -r ./baseMeshes/monolithic/constant/solid/polyMesh/ ./constant/solid

            cp -r ./baseMeshes/monolithic/constant/inner/faMesh/ ./constant/inner
            cp -r ./baseMeshes/monolithic/constant/outer/faMesh/ ./constant/outer

            runApplication -l log.setSet.solid setSet -region solid -batch solid.setSet 2>/dev/null
            runApplication -l log.setsToZones.solid setsToZones -region solid -noFlipMap 2>/dev/null

            runApplication -l log.setSet.inner setSet -region inner -batch inner.setSet 2>/dev/null
            runApplication -l log.setsToZones.inner setsToZones -region inner -noFlipMap 2>/dev/null

            runApplication -l log.setSet.outer setSet -region outer -batch outer.setSet 2>/dev/null
            runApplication -l log.setsToZones.outer setsToZones -region outer -noFlipMap 2>/dev/null

            runApplication -l log.makeFaMesh.inner makeFaMesh -region inner 2>/dev/null
            runApplication -l log.makeFaMesh.outer makeFaMesh -region outer 2>/dev/null

            ;;

        -S|--serial)
            no_args=0

            runApplication multiRegionFoam 2>/dev/null

            ;;

        -P|--parallel)
            no_args=0

            runApplication -l log.decomposePar.inner decomposePar -region inner
            runApplication -l log.decomposePar.outer  decomposePar -region outer
            runApplication -l log.decomposePar.solid decomposePar -region solid

            mpirun -np 4 multiRegionFoam -noFunctionObjects -parallel 2>&1 > log.multiRegionFoam

            runApplication -l log.reconstructPar.fluid reconstructPar -region fluid
            runApplication -l log.reconstructPar.solid reconstructPar -region solid

            rm -r processor*
            ;;

        --)
            shift
            break;;

    esac
    shift
done

if [ "$no_args" -eq 1 ]; then
    >&2 echo "No arguments provided"
    usage
    exit 1
fi
