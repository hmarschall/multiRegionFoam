Test
{
  expr		"Test: (%f%)	(%f%)	(%f%)	(%f%)	(%f%)	(%f%)";
  theTitle	"test";
  name		test;
  titles	(pressure conti stress rhs gravity mR);
}


MeshVolume
{
  expr		".*Total volume = (%f%).*";
  theTitle	"mesh volume";
  name		meshVolume;
  titles	(meshVolume);
}

VelocityMagnitude
{
  expr		".* velocity magnitude = (%f%)";
  name		Custom1VelocityMagnitude;
  accumulation	last;
  theTitle	"velocity magnitude";
  titles	(VelMag);
}

BubbleVelocity
{
  expr		"Current bubble velocity: UF \[0 1 -1 0 0 0 0\] \((%f%) (%f%) (%f%)\)";
  theTitle	"Velocities";
  name		velocities;
  titles	(Ub_x Ub_y Ub_z);	
}

ChannelVelocity
{
  type 		slave;
  master	BubbleVelocity;
  expr		"Current channel flow velocity: \(.+\*Ubar\) \[0 1 -1 0 0 0 0\] \(0 0 (%f%)\)";
  titles	(UC);
}

BubbleAcceleration
{
  expr		"Current bubble acceleration: \(dUF\|deltaT0\) \[0 1 -2 0 0 0 0\] \((%f%) (%f%) (%f%)\)";
  theTitle	"Accelerations";
  name		accelerations;
  titles	(a_x a_y a_z);	
}

InterfaceResidual
{
  expr		"Convergence:  interface velocity residual : (%f%), interface momentum residual : (%f%)";
  theTitle	"InterfaceResidual";
  name		InterfaceResidual;
  accumulation	last;
  titles	(iRes_u iRes_mom);	
}

/*PIMPLECresidual
{
  expr		"Convergence:  Momentum residual : (%f%), Pressure residual : (%f%)";
  theTitle	"PIMPLECresidual";
  name		PIMPLEC_r;
  logscale 	true;
  accumulation  last;
  titles	(momentum pressure);	
}

CorrSteps
{
  expr		"Outer Corrector:  (%f%) of \d+";
  theTitle	"corrSteps";
  name		corrSteps;
  accumulation	last;
  titles	(steps);	
}

SigmaPresidual
{
  expr		"Convergence:  interface pressure residual : (%f%), interface pressureGrad residual : (%f%)";
  theTitle	"Sigmaresidual";
  name		Sigma_r;
  logscale 	true;
  accumulation  last;
  titles	(pSigma pGradSigma);	
}

SigmaUresidual
{
  type 		slave;
  master	SigmaPresidual;
  expr		"interface velocity residual : (%f%), interface velocityGrad residual : (%f%)";
  titles	(uSigma uGradSigma);
}

BubblePosition
{
  expr		"Current bubble position: XF \[0 1 0 0 0 0 0\] \((%f%) (%f%) (%f%)\)";
  theTitle	"position";
  name		positions;
  titles	(Xb_x Xb_y Xb_z);	
}

ExecutionTime
{
  expr		"ExecutionTime = (%f%) s";
  theTitle	"execTime";
  name		execTime;
  titles	(execution time);	
}

timestep
{
  expr		"deltaT = (%f%)";
  theTitle	"timestep";
  name		timestep;
  titles	(timestep);	
}

MeshNonOrtho
{
  expr		".*Mesh non-orthogonality Max: (%f%) .*";
  theTitle	"mesh characteristics";
  name		meshCharacteristics;
  titles	(maxNonOrtho);
}

MeshNonOrthoNum
{
  type		slave;
  master	MeshNonOrtho;
  expr		".*Number of severely non-orthogonal faces: (%f%).";
  titles	(nonOrthoNumber);
}

MeshSkewness
{
  type		slave;
  master	MeshNonOrtho;
  expr		".*Max skewness = (%f%).*";
  titles	(maxSkewness);
}

MeshVolumes
{  
  expr		".*Min volume = (%f%). Max volume = (%f%).*";
  theTitle	"cell volumes";
  name		cellVolume;
  titles	(minVolume	maxVolume);
  alternateAxis	(maxVolume);
}

MeshArea
{  
  expr		".*Minumum face area = (%f%). Maximum face area = (%f%).*";
  theTitle	"cell areas";
  name		cellAreas;
  titles	(minArea	maxArea);
  alternateAxis	(maxArea);
}*/



/*PressureResidual
{
  expr		"GAMGPCG:  Solving for p.* Final residual = (%f%).*";
  name		finalResiduals;
  accumulation	last;
  logscale	y;
  theTitle	"final residuals";
  titles	(Pressure);
}

VelocityResidualX
{
  type 		slave;
  master	PressureResidual;
  accumulation 	last;
  expr		"DILUPBiCG:  Solving for Ux, Initial residual = .+, Final residual = (%f%), .*";
  titles	(VelocityX);
}

VelocityResidualY
{
  type 		slave;
  master	PressureResidual;
  accumulation 	last;
  expr		"DILUPBiCG:  Solving for Uy, Initial residual = .+, Final residual = (%f%), .*";
  titles	(VelocityY);
}

VelocityResidualZ
{
  type 		slave;
  master	PressureResidual;
  accumulation 	last;
  expr		"DILUPBiCG:  Solving for Uz, Initial residual = .+, Final residual = (%f%), .*";
  titles	(VelocityZ);
} */
