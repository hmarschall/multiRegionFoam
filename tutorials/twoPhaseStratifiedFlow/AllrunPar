#!/bin/sh
# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name from directory
application="twoMeshItrackFoam"
nProcs="4"

# specify the number oof processors in all decomposeParDict files
sed -i "s/numberOfSubdomains.*;/numberOfSubdomains\t $nProcs;/g" mesh*/system/decomposeParDict*

# decompose mesh via workaround in foam-extend
cd meshA
./Allrun

# create sets around the interface patch to force it on one processor
setSet -batch interface.setSet >> log.setSet
cp system/decomposeParDict1 system/decomposeParDict
runApplication decomposePar -cellDist
python3 writeCellDecomp.py
rm -r log.decomposePar processor*
cp system/decomposeParDict2 system/decomposeParDict
runApplication decomposePar

# to view the mesh components on each processor
for proc in proc*
do
    touch $proc/$proc.foam
done

# decompose mesh via workaround in foam-extend
cd ../meshB
./Allrun

# create sets around the interface patch to force it on one processor
setSet -batch interface.setSet >> log.setSet
cp system/decomposeParDict1 system/decomposeParDict
runApplication decomposePar -cellDist
python3 writeCellDecomp.py
rm -r log.decomposePar processor*
cp system/decomposeParDict2 system/decomposeParDict
runApplication decomposePar

# to view the mesh components on each processor
for proc in proc*
do
    touch $proc/$proc.foam
done

# create links for parallel case
cd ..
./makeLinks meshA meshB

cd meshA
runParallel $application $nProcs

# reconstruct the decomposed case; order important
runApplication reconstructPar -region meshB
rm proc*/*/surfaceTension proc*/*/Us
reconstructPar >> log.reconstructPar

cd ..
