#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

usage() {
        echo ""
        echo "Usage:"
        echo "($0 [-p or --partitioned | -m or --monolithic] [-S or --serial | -P or --parallel]"
        echo ""
        exit 0
}

# $@ is all command line parameters passed to the script.
# -o is for short options like -v
# -l is for long options with double dash like --version
# the comma separates different long options
# -a is for long options with single dash like -version
options=$(getopt -l "help,partitioned,monolithic:,serial,parallel" -o "hpm:SP" -a -- "$@")

# set --:
# If no arguments follow this option, then the positional parameters are unset.
# Otherwise, the positional parameters are set to the arguments, even if some
# of them begin with a ‘-’.
eval set -- "$options"

while true
do
    case $1 in

        -h|--help)
            usage
            exit 0
            ;;

        -p|--partitioned)
            cp -r 0/fluidA/orig/partitioned/. 0/fluidA/.
            cp -r 0/fluidB/orig/partitioned/. 0/fluidB/.

            runApplication makeFaMesh -region fluidA

        ./makeLinks fluidA
        ;;

        -m|--monolithic)

            echo "monolithic p-U coupling currently not supported"
            shift
            break
            ;;

        -S|--serial)
            runApplication multiRegionFoam 2>/dev/null &
            ;;

        -P|--parallel)
            runApplication decomposePar -region fluidA
            runApplication -l log.decomposePar.fluidB decomposePar -region fluidB

            # runParallel multiRegionFoam 4

            # mpirunDebug -np 4 multiRegionFoam -noFunctionObjects -parallel

            # MPIRUN_OPTIONS="--bind-to core --map-by core --report-bindings"
            # MPIRUN_OPTIONS= --output-filename log

            mpirun -np 4 multiRegionFoam -noFunctionObjects -parallel 2>&1 > log.multiRegionFoam &
            ;;

        --)
            shift
            break;;

    esac
    shift
done
